unit Unit1;

interface

///<SUMMARY>
///  JUEGO COLAS, BANCO
///  RUTH ARDÓN LECHUGA
///  C5E
///  EL SIGUIENTE PROGRAMA EJEMPLIFICA EL USO DE COLAS, A TRAVÉS DE UN SISTEMA
///  DE BANCO EN EL CUAL HAY 3 VENTANILLAS (POR CADA VENTANILLA HAY UNA COLA)
///  Y LAS PERSONAS AL ENTRAR AL BANCO VAN COLOCANDOSE FRENTE A CADA VENTANILLA
///  EL USUARIO DEBE DE ATENDER DICHAS VENTANILLAS PARA IR AVANZANDO, CONFORME
///  EL JUEGO AVANZA, EL TIEMPO DE CREACIÓN DE LAS PERSONAS AUMENTA.
/// </SUMMARY>

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.Imaging.pngimage, Vcl.ExtCtrls,
  Vcl.StdCtrls, System.DateUtils;

type
  TForm1 = class(TForm)
    Image1: TImage;
    Timer1: TTimer;
    Timer2: TTimer;
    Label1: TLabel;
    Memo1: TMemo;
    Button1: TButton;
    Edit1: TEdit;
    Label2: TLabel;
    procedure FormCreate(Sender: TObject);
    procedure Timer1Timer(Sender: TObject);
    procedure Timer2Timer(Sender: TObject);
    procedure Button1Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

{ La clase ventana creara las ventanas de atención al cliente junto con el
  vector de colas en el cual se estarán ingresando las personas conforme
  entren al banco.
}
type
  Ventana = Class
    private
      atencion: timage;
      data: array[0..5] of timage;
      sp: integer;
      b: boolean;
    public
      constructor create(f: TForm1; x:integer);
      procedure Click(t: TObject);
      procedure Queue(e,imgp: string);
      procedure Dequeue;
  End;

{ La clase hilo se encarga de crear multiples hilos (hilo por cada persona que
  entra dentro del banco) para que puedan darse varios sucesos a la vez.
}
type
   THilo = Class(TThread)
     private
        imgpH: string;
        spH: integer;
        atencionH,clienteH: timage;
     public
      constructor create(cliente,atencion:timage;imgp:string;sp:integer);
      procedure Execute; override;
      destructor destroy; override;
   end;

var
  Form1: TForm1;
  v1,v2,v3: Ventana;
  Hilo: THilo;
  s,m,h,n,i,intervalo: integer;
  personaje,imgp,resultado: string;
  records: textfile;
const
  ext = 'C:\Users\Ruth Lechuga\Desktop\Colas- Juego\imagenes\';

implementation

{$R *.dfm}

    constructor THilo.create(cliente,atencion:timage;imgp:string;sp:integer);
     begin
       inherited create(true);
       imgpH:= imgp;
       clienteH:= cliente;
       atencionH:= atencion;
       spH:= sp;
     end;

     procedure THilo.Execute;
     begin
      while clienteH.Top > 474 do
         begin
            Application.ProcessMessages;
            sleep(10);
            clienteH.top:=clienteH.top-3;
         end;
      clienteH.Picture.LoadFromFile(ext+imgpH+'-'+imgpH+'.png');
      while clienteH.left-20 > atencionH.Left do
         begin
             Application.ProcessMessages;
             sleep(10);
             clienteH.left:=clienteH.left-3;
         end;
      clienteH.Picture.LoadFromFile(ext+imgpH+'.png');
      while clienteH.top > (atencionH.Top+atencionH.Height+30+(spH-1)*70) do
        begin
            Application.ProcessMessages;
            sleep(10);
            clienteH.Top:=clienteH.top-3;
        end;
        Hilo.Destroy;
     end;

     destructor THilo.Destroy;
     begin
      inherited destroy;
     end;

    constructor Ventana.create(f: TForm1; x:integer);
    begin
       sp:=0;
       atencion:= timage.Create(f);
       atencion.parent:= f;
       atencion.Left:= x;
       atencion.top:= 120;
       atencion.Width:= 115;
       atencion.height:= 60;
       atencion.Picture.loadfromfile(ext+'Ventana.png');
       atencion.OnClick:= Click;
    end;

    procedure Perder;
    begin
      Showmessage('Has perdido');
       with Form1 do
        begin
          timer1.Enabled:= false;
          timer2.Enabled:= false;
          Memo1.Visible:= true;
          Button1.Visible:= true;
          Edit1.Visible:= true;
          Label2.Visible:= true;
        end;
        v1.sp:= 0; v2.sp:= 0; v3.sp:=0;
        if (Form1.Memo1.Lines[0] = '') then
         begin
          Form1.Memo1.lines.add('Otros resultados:');
          assignfile(records,'records.txt');
          Reset(records);
           while (not eof(records)) do
             begin
                Readln(records,resultado);
                Form1.Memo1.Lines.Add(resultado);
             end;
          Closefile(records);
         end;
    end;

    procedure Ventana.Queue(e,imgp: string);
    begin
       if (sp < 5) then
          begin
            inc(sp);
            data[sp]:= timage.Create(Form1);
            data[sp].Parent:= form1;
            data[sp].Width:= 50;
            data[sp].Height:= 50;
            data[sp].Top:= 530;
            data[sp].Left:= 710;
            data[sp].Picture.LoadFromFile(e);
            b:= false;
            Hilo := THilo.create(data[sp],atencion,imgp,sp);
            Hilo.Resume;
            b:= true;
          end
           else
              Perder;
    end;

    procedure Ventana.Dequeue;
    begin
        if (sp > 0) and b then
           begin
             data[1].Destroy;
             sp:= sp-1;
            for i:=1 to sp do
             begin
              data[i]:= data[i+1];
               while data[i].Top > (atencion.Top+atencion.Height+30+(i-1)*70) do
                 begin
                  Application.ProcessMessages;
                  sleep(10);
                  data[i].Top:=data[i].top-3;
                 end;
             end;
           end
    end;

    procedure Ventana.Click(t: TObject);
    begin
       Dequeue;
    end;

procedure TForm1.Button1Click(Sender: TObject);
begin
assignfile(records,'records.txt');
append(records);
Writeln(records,('Nombre: '+Edit1.Text+'-Tiempo: '+inttostr(s)));
Closefile(records);
Showmessage('Tiempo guardado de forma éxitosa');
Button1.Enabled:= False;
end;

procedure TForm1.FormCreate(Sender: TObject);
begin
intervalo:= 4;
     v1:= Ventana.create(form1,250);
     v2:= Ventana.create(form1,450);
     v3:= Ventana.create(form1,650);
end;

procedure TForm1.Timer1Timer(Sender: TObject);
begin
    inc(s);
    if (s mod 10=0) then
       timer2.Interval := Round(timer2.Interval * 0.9);

    if (timer2.Interval = 1) and (intervalo > 2) then
       intervalo:= intervalo-1;

    label1.Caption:= 'Tiempo '+inttostr(s)+'seg';
end;

procedure TForm1.Timer2Timer(Sender: TObject);
begin
   n:= random(intervalo)+1;
   imgp:= inttostr(random(4)+1);
   personaje:= ext + imgp + '.png';

   case n of
     1: v1.Queue(personaje,imgp);
     2: v2.Queue(personaje,imgp);
     3: v3.Queue(personaje,imgp);
   end;
end;

end.
